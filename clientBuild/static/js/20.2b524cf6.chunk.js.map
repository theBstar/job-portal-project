{"version":3,"sources":["views/SignUp/SignUp.jsx","views/SignUp/index.js"],"names":["useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","formControl","submit","signInLinkContainer","justifyContent","SignUp","classes","history","useHistory","useEffect","Auth","getToken","replace","useState","firstName","setFirstName","lastName","setLastName","email","setEamil","password","setPassword","confirmPassword","setConfirmPassword","userType","setUserType","mobileNo","setMobileNo","policyStatus","setPolicyStatus","currentDateArr","Date","toLocaleDateString","split","reverse","join","dob","setDob","experience","setExperience","highestEducation","setHighestEducation","userLocation","setUserLocation","company","setComapy","position","setPosition","isSubmitButtonDisabled","setIsSubmitButtonDisabled","isFormValid","useCallback","every","e","Container","component","maxWidth","Box","className","Avatar","Typography","variant","id","noValidate","onSubmit","preventDefault","filledFormData","mobile","address","axios","post","data","then","res","status","Error","push","catch","Grid","container","item","xs","sm","TextField","autoComplete","name","value","onChange","target","required","fullWidth","label","autoFocus","type","FormControl","RadioGroup","aria-label","row","FormControlLabel","control","Radio","Checkbox","checked","color","Button","disabled","justify","to"],"mappings":"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","file":"static/js/20.2b524cf6.chunk.js","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControl from '@material-ui/core/FormControl';\nimport { Link as RouterLink, useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport Auth from '../../utils/Auth';\n\n\n\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  formControl: {\n    width: '100%',\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  signInLinkContainer: {\n    display: 'flex',\n    justifyContent: 'center',\n  },\n}));\n\nexport default function SignUp() {\n\n  // styles\n  const classes = useStyles();\n  const history = useHistory();\n\n  useEffect(() => {\n    const token = Auth.getToken();\n    if (token) {\n      history.replace('/');\n    }\n  });\n\n  // common fields\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [email, setEamil] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [userType, setUserType] = useState('candidate');\n  const [mobileNo, setMobileNo] = useState('');\n  const [policyStatus, setPolicyStatus] = useState(true);\n\n  // if candidate\n  const currentDateArr = (new Date().toLocaleDateString()).split('/');\n  const [dob, setDob] = useState(currentDateArr.reverse().join('-'));\n  const [experience, setExperience] = useState('0');\n  const [highestEducation, setHighestEducation] = useState('');\n  const [userLocation, setUserLocation] = useState('');\n\n  // if recruiter\n  const [company, setComapy] = useState('');\n  const [position, setPosition] = useState('');\n\n  const [isSubmitButtonDisabled, setIsSubmitButtonDisabled] = useState(true);\n\n  const isFormValid = useCallback(() => {\n    if (userType) {\n      if ([firstName, lastName, email, password, confirmPassword, mobileNo, userLocation, policyStatus].every(e => e)\n        && (password === confirmPassword)) {\n        if (userType === 'candidate') {\n          if (dob && highestEducation && experience) {\n            return true;\n          } else {\n            return false;\n          }\n        } else {\n          if (company && position) {\n            return true;\n          } else {\n            return false;\n          }\n        }\n      } else {\n        return false;\n      }\n    } else {\n      return false;\n    }\n  }, [\n    firstName,\n    lastName,\n    email,\n    password,\n    confirmPassword,\n    userType,\n    userLocation,\n    mobileNo,\n    policyStatus,\n    dob,\n    highestEducation,\n    experience,\n    company,\n    position,\n  ]);\n\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    if (isFormValid()) {\n      // handle form submit here\n      const filledFormData = {\n        firstName,\n        lastName,\n        email,\n        password,\n        userType,\n        mobile: mobileNo,\n        address: userLocation\n      }\n\n      if (userType === 'candidate') {\n        filledFormData.dob = dob;\n        filledFormData.highestEducation = highestEducation;\n        filledFormData.experience = experience;\n      } else {\n        filledFormData.company = company;\n        filledFormData.position = position;\n      }\n\n      axios.post('/account/new', {\n        data: filledFormData\n      })\n        .then((res) => {\n          if (res.status !== 200) throw Error('Something went wrong');\n          history.push('/login');\n        })\n        .catch((e) => {\n\n        })\n\n    }\n  }\n\n  useEffect(() => {\n    if (isFormValid()) {\n      setIsSubmitButtonDisabled(false);\n    } else {\n      setIsSubmitButtonDisabled(true);\n    }\n  }, [isFormValid]);\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <Box className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        <form\n          id=\"signupForm\"\n          className={classes.form}\n          noValidate\n          onSubmit={handleSubmit}\n        >\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                autoComplete=\"fname\"\n                name=\"firstName\"\n                value={firstName}\n                onChange={(e) => setFirstName(e.target.value)}\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"firstName\"\n                label=\"First Name\"\n                autoFocus\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"lastName\"\n                value={lastName}\n                onChange={(e) => setLastName(e.target.value)}\n                label=\"Last Name\"\n                name=\"lastName\"\n                autoComplete=\"lname\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                type=\"email\"\n                value={email}\n                onChange={(e) => setEamil(e.target.value)}\n                autoComplete=\"email\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                autoComplete=\"current-password\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Confirm Password\"\n                type=\"password\"\n                id=\"confirmPassword\"\n                value={confirmPassword}\n                onChange={(e) => setConfirmPassword(e.target.value)}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"mobile\"\n                label=\"Mobile no\"\n                type=\"tel\"\n                id=\"mobileNo\"\n                value={mobileNo}\n                onChange={(e) => setMobileNo(e.target.value)}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"userLocation\"\n                label=\"Location\"\n                type=\"text\"\n                id=\"userLocation\"\n                value={userLocation}\n                onChange={(e) => setUserLocation(e.target.value)}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormControl component=\"fieldset\" className={classes.formControl}>\n                <RadioGroup\n                  aria-label=\"user type\"\n                  name=\"userType\"\n                  value={userType}\n                  onChange={(e) => setUserType(e.target.value)}\n                  row\n                >\n                  <FormControlLabel value=\"candidate\" control={<Radio />} label=\"Candidate\" />\n                  <FormControlLabel value=\"recruiter\" control={<Radio />} label=\"Recruiter\" />\n                </RadioGroup>\n              </FormControl>\n            </Grid>\n\n            {(userType === 'candidate') ? (\n              <>\n                <Grid item xs={12}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    name=\"dob\"\n                    label=\"Date of birth\"\n                    type=\"date\"\n                    id=\"dob\"\n                    value={dob}\n                    onChange={(e) => setDob(e.target.value)}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    name=\"highestEducation\"\n                    label=\"Highest education\"\n                    type=\"text\"\n                    id=\"highestEducation\"\n                    value={highestEducation}\n                    onChange={(e) => setHighestEducation(e.target.value)}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    name=\"experience\"\n                    label=\"Experience\"\n                    type=\"number\"\n                    id=\"experience\"\n                    value={experience}\n                    onChange={(e) => setExperience(e.target.value)}\n                  />\n                </Grid>\n              </>\n            ) : (\n                <>\n                  <Grid item xs={12}>\n                    <TextField\n                      variant=\"outlined\"\n                      required\n                      fullWidth\n                      name=\"company\"\n                      label=\"Company\"\n                      type=\"text\"\n                      id=\"company\"\n                      value={company}\n                      onChange={(e) => setComapy(e.target.value)}\n                    />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <TextField\n                      variant=\"outlined\"\n                      required\n                      fullWidth\n                      name=\"position\"\n                      label=\"Position in company\"\n                      type=\"text\"\n                      id=\"position\"\n                      value={position}\n                      onChange={(e) => setPosition(e.target.value)}\n                    />\n                  </Grid>\n                </>\n              )}\n            <Grid item xs={12}>\n              <FormControlLabel\n                control={<Checkbox checked={policyStatus} value={policyStatus} color=\"primary\" />}\n                label=\"I have read and accept all terms and policies.\"\n                onChange={(e) => {\n                  // console.log(e.target.value);\n                  setPolicyStatus(!policyStatus)\n                }}\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            disabled={isSubmitButtonDisabled}\n          >\n            Sign Up\n          </Button>\n          <Grid container justify=\"flex-end\">\n            <Grid item className={classes.signInLinkContainer}>\n              <RouterLink to=\"/signin\">\n                Already have an account? Sign in\n              </RouterLink>\n            </Grid>\n          </Grid>\n        </form>\n      </Box>\n    </Container>\n  );\n}","import SignUp from './SignUp';\n\nexport default SignUp;"],"sourceRoot":""}