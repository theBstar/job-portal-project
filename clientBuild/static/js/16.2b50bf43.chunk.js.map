{"version":3,"sources":["views/Admin/Recruiter.jsx"],"names":["useStyles","makeStyles","theme","root","marginTop","spacing","width","selfDetails","padding","typographyBigFont","margin","fontSize","recruiters","recruitersHeader","recruitersContainer","formControl","doneButton","Recruiter","useState","applicationStatus","setApplcationStatus","newStatusRadioValue","setNewStatusRadioValue","id","useParams","classes","isLoading","setIsLoading","recruiter","setRecruiter","newRecruiterStatus","setNewRecruiterStatus","useEffect","axios","get","then","res","data","catch","e","status","className","variant","name","company","position","address","action","component","aria-label","value","onChange","target","row","control","label","color","type","fullWidth","onClick","newStatus","put","uid","Error","success","console","log","error"],"mappings":"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","file":"static/js/16.2b50bf43.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Box, makeStyles, Container } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Radio from '@material-ui/core/Radio';\n// import TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\n\n// status -- 0 - no action yet, 1 - accepted, 2 - rejected/suspended\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: theme.spacing(12),\n    width: '80%',\n  },\n  selfDetails: {\n    padding: theme.spacing(3, 2),\n  },\n  typographyBigFont: {\n    margin: theme.spacing(1, 0),\n    fontSize: '1.5rem',\n  },\n  recruiters: {\n    // padding: theme.spacing(3, 2),\n  },\n  recruitersHeader: {\n    margin: theme.spacing(3, 0),\n    // marginBottom: 0,\n  },\n  recruitersContainer: {\n    // marginTop: theme.spacing(),\n  },\n\n  formControl: {\n    width: '100%',\n    margin: theme.spacing(0, 0, 0, 2),\n  },\n  doneButton: {\n    margin: theme.spacing(4, 0, 2, 0),\n  }\n}));\n\nfunction Recruiter() {\n\n  const [applicationStatus, setApplcationStatus] = useState('new');\n  const [newStatusRadioValue, setNewStatusRadioValue] = useState('accepted');\n  // const [welcomeMessage, setWelcomeMessage] = useState('');\n  // const [suspensionMessage, setSuspensionMessage] = useState('');\n  // const [welcomeAgainMessage, setWelcomeAgainMessage] = useState('');\n  const params = useParams();\n\n  const { id } = params;\n\n  const classes = useStyles();\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [recruiter, setRecruiter] = useState({});\n\n  const [newRecruiterStatus, setNewRecruiterStatus] = useState('');\n  useEffect(() => {\n\n    axios.get(`/admin/recruiter/${id}`)\n      .then((res) => {\n\n        setRecruiter(res.data.data);\n        setIsLoading(false);\n      })\n      .catch((e) => {\n        setIsLoading(false);\n      })\n\n  }, [setRecruiter, applicationStatus, id,]);\n\n\n  useEffect(() => {\n    if (!isLoading) {\n      // console.log('recruiter status ', recruiter);\n      if (recruiter.status === 0) {\n        setApplcationStatus('New');\n        setNewRecruiterStatus('Accept');\n        setNewStatusRadioValue('accepted')\n      } else if (recruiter.status === 1) {\n        setApplcationStatus('Active');\n        setNewRecruiterStatus('Suspend');\n      } else {\n        setApplcationStatus('Reject');\n        setNewRecruiterStatus('Activate');\n      }\n    }\n  }, [isLoading, recruiter.status,\n    setApplcationStatus,\n    setNewRecruiterStatus]);\n\n\n  function handleSubmit() {\n    let newStatus;\n    if (applicationStatus === 'New') {\n      newStatus = newStatusRadioValue === 'accepted' ? 1 : 2;\n    } else if (newRecruiterStatus === 'Suspend') {\n      newStatus = 2;\n    } else {\n      newStatus = 1;\n    }\n\n    axios.put(`/admin/recruiter/${id}`, {\n      uid: recruiter.uid, newStatus,\n    })\n      .then((res) => {\n        if (res.status !== 200) {\n          throw Error('Could not update status')\n        }\n        return res.data.status;\n      })\n      .then((success) => {\n        if (success) {\n          console.log('success ');\n          setRecruiter({ ...recruiter, status: newStatus });\n        }\n      })\n      .catch((error) => {\n        // handle error here\n      })\n  }\n\n\n  return (\n    <Container className={classes.root}>\n\n      {(!isLoading) && (\n        <Paper className={classes.selfDetails}>\n          <Typography\n            variant=\"body1\"\n            className={classes.typographyBigFont}\n          >\n            Recruiter details\n        </Typography>\n          <Typography\n            variant=\"body1\"\n          >\n            Name: {recruiter.name}\n          </Typography>\n          <Typography\n            variant=\"body1\"\n          >\n            Company Name: {recruiter.company}\n          </Typography>\n          <Typography\n            variant=\"body1\"\n          >\n            Position: {recruiter.position}\n          </Typography>\n          <Typography\n            variant=\"body1\"\n          >\n            Location: {recruiter.address}\n          </Typography>\n\n          <Typography\n            variant=\"body1\"\n          >\n            Account Status: {applicationStatus}\n          </Typography>\n\n          <Box className={classes.recruiters}>\n            <Box className={classes.action}>\n              <Typography\n                variant=\"h3\"\n                className={classes.typographyBigFont + ' ' + classes.recruitersHeader}\n              >\n                {newRecruiterStatus} Recruiter account\n              </Typography>\n\n              {(recruiter.status === 0) && (\n                <FormControl component=\"fieldset\" className={classes.formControl}>\n                  <RadioGroup\n                    aria-label=\"reject or accept the application\"\n                    name=\"application status\"\n                    value={newStatusRadioValue}\n                    onChange={(e) => setNewStatusRadioValue(e.target.value)}\n                    row\n                  >\n                    <FormControlLabel value=\"accepted\" control={<Radio />} label=\"Accept\" />\n                    <FormControlLabel value=\"rejected\" control={<Radio />} label=\"Reject\" />\n                  </RadioGroup>\n                </FormControl>\n              )}\n              {/* {(applicationStatus === 'rejected') ? (\n                    <TextField\n                      name=\"application-status-reject\"\n                      value={rejectionMessage}\n                      onChange={(e) => setRejectionMessage(e.target.value)}\n                      variant=\"outlined\"\n                      fullWidth\n                      multiline\n                      rows={5}\n                      id=\"rejectionMessage\"\n                      label=\"Write a rejection message\"\n                      placeholder=\"Write a rejection message\"\n                    />\n                  ) : (\n                      <TextField\n                        name=\"application-status-accept\"\n                        value={welcomeMessage}\n                        onChange={(e) => setWelcomeMessage(e.target.value)}\n                        variant=\"outlined\"\n                        multiline\n                        fullWidth\n                        rows={5}\n                        id=\"welcomeMessage\"\n                        label=\"Write a welcome message\"\n                        placeholder=\"Write a welcome message\"\n                      />\n                    )} */}\n\n              {/* {(recruiter.status === 'active') && (\n                <TextField\n                  name=\"application-status-accept\"\n                  value={suspensionMessage}\n                  onChange={(e) => setSuspensionMessage(e.target.value)}\n                  variant=\"outlined\"\n                  multiline\n                  fullWidth\n                  rows={5}\n                  id=\"suspensionMessage\"\n                  label=\"Write the reason for suspension\"\n                  placeholder=\"Write the reason suspension\"\n                />\n              )}\n\n              {(recruiter.status === 'suspended') && (\n                <TextField\n                  name=\"application-status-accept\"\n                  value={welcomeAgainMessage}\n                  onChange={(e) => setWelcomeAgainMessage(e.target.value)}\n                  variant=\"outlined\"\n                  multiline\n                  fullWidth\n                  rows={5}\n                  id=\"welcomeAgainMessage\"\n                  label=\"Welcome the recruiter again\"\n                  placeholder=\"Welcome the recruiter again\"\n                />\n              )} */}\n\n              <Button\n                color=\"primary\"\n                type=\"button\"\n                fullWidth\n                variant=\"contained\"\n                className={classes.doneButton}\n                onClick={handleSubmit}\n              >\n                {newRecruiterStatus}\n              </Button>\n            </Box>\n\n          </Box>\n        </Paper>\n      )}\n\n    </Container>\n  );\n}\n\nexport default Recruiter;"],"sourceRoot":""}