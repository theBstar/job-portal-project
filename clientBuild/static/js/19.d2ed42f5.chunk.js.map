{"version":3,"sources":["views/Recruiter/JobDetails.jsx"],"names":["useStyles","makeStyles","theme","root","marginTop","spacing","selfDetails","padding","typographyBigFont","fontSize","applicants","applicantsHeader","applicantsContainer","applicant","display","boxShadow","shadows","routerLink","flexGrow","textDecoration","width","color","palette","text","primary","applicantName","marginRight","paddingLeft","whiteSpace","overflow","textOverflow","applicantEdtn","applicantExp","noApplicant","JobDetails","user","recruiter","params","useParams","classes","id","useState","job","setJob","useEffect","axios","get","then","res","status","Error","data","catch","className","variant","title","description","location","tag","length","map","key","name","to","highestEducation","experience"],"mappings":"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","file":"static/js/19.d2ed42f5.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams, Link as RouterLink } from 'react-router-dom';\nimport { Box, makeStyles, Container } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport axios from 'axios';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: theme.spacing(12),\n  },\n  selfDetails: {\n    padding: theme.spacing(3, 2),\n  },\n  typographyBigFont: {\n    fontSize: '1.5rem',\n  },\n  applicants: {\n    // padding: theme.spacing(3, 2),\n  },\n  applicantsHeader: {\n    marginTop: theme.spacing(1.5),\n    padding: theme.spacing(2),\n  },\n  applicantsContainer: {\n    marginTop: theme.spacing(.5),\n  },\n\n  applicant: {\n    marginTop: theme.spacing(1.5),\n    display: 'flex',\n    boxShadow: theme.shadows[1],\n    '&:hover': {\n      boxShadow: theme.shadows[3],\n    },\n    // padding: theme.spacing(2),\n  },\n  routerLink: {\n    flexGrow: 1,\n    textDecoration: 'none',\n    width: '100%',\n    display: 'flex',\n    padding: theme.spacing(2),\n    color: theme.palette.text.primary,\n    '&:visited': {\n      color: theme.palette.text.primary,\n    },\n    '&:active': {\n      color: theme.palette.text.primary,\n    }\n  },\n  applicantName: {\n    width: '33%',\n    marginRight: theme.spacing(1),\n    paddingLeft: theme.spacing(.3),\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n  },\n  applicantEdtn: {\n    width: '33%',\n    marginRight: theme.spacing(1),\n    paddingLeft: theme.spacing(.3),\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n  },\n  applicantExp: {\n    width: '33%',\n    paddingLeft: theme.spacing(.3),\n    marginRight: 0,\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n  },\n\n  noApplicant: {\n    marginTop: theme.spacing(1.5),\n    display: 'flex',\n    boxShadow: theme.shadows[1],\n    '&:hover': {\n      boxShadow: theme.shadows[3],\n    },\n    padding: theme.spacing(2),\n  },\n}));\n\nfunction JobDetails({ user, recruiter }) {\n  const params = useParams();\n  const classes = useStyles();\n\n  const { id } = params;\n  const [job, setJob] = useState({});\n\n  useEffect(() => {\n    axios.get(`/recruiter/job/${id}`)\n      .then((res) => {\n        if (res.status !== 200) throw Error('something went wrong');\n        return res;\n      })\n      .then((res) => {\n        if (res.data.data) {\n          setJob(res.data.data);\n        }\n      })\n      .catch(() => {\n\n      })\n  }, [setJob, id]);\n\n  return (\n    <Container className={classes.root}>\n      <Paper className={classes.selfDetails}>\n        <Typography\n          variant=\"body1\"\n          className={classes.typographyBigFont}\n        >\n          Title: {job.title}\n        </Typography>\n        <Typography\n          variant=\"body1\"\n        >\n          Description: {job.description}\n        </Typography>\n        <Typography\n          variant=\"body1\"\n        >\n          Location: {job.location}\n        </Typography>\n        <Typography\n          variant=\"body1\"\n        >\n          Tag: {job.tag}\n        </Typography>\n      </Paper>\n      <Box className={classes.applicants}>\n        <Typography\n          variant=\"h3\"\n          className={classes.typographyBigFont + ' ' + classes.applicantsHeader}\n        >\n          Applicants:\n        </Typography>\n        <Box className={classes.applicantsContainer}>\n          {(job && job.applicants && job.applicants.length) ? (\n            job.applicants.map((applicant) => {\n              return (\n                <Paper\n                  key={'applicant' + applicant.id + ' ' + applicant.name}\n                  className={classes.applicant}\n                >\n                  <RouterLink to={`/applicant/${applicant.id}`} className={classes.routerLink}>\n                    <Box className={classes.applicantName}>\n                      {applicant.name}\n                    </Box>\n                    <Box className={classes.applicantEdtn}>\n                      {applicant.highestEducation}\n                    </Box>\n                    <Box className={classes.applicantExp}>\n                      {applicant.experience} years of experience\n                  </Box>\n                  </RouterLink>\n                </Paper>\n              );\n            })\n          ) : (\n              <Paper\n                className={classes.noApplicant}\n              >\n                Looks like no one has applied yet!\n              </Paper>\n            )}\n        </Box>\n      </Box>\n    </Container>\n  );\n}\n\nexport default JobDetails;"],"sourceRoot":""}