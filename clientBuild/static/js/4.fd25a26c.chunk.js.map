{"version":3,"sources":["../node_modules/@material-ui/icons/LockOutlined.js","../node_modules/@material-ui/core/esm/Avatar/Avatar.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBox.js","../node_modules/@material-ui/core/esm/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@material-ui/core/esm/Checkbox/Checkbox.js","views/SignUp/SignUp.jsx","views/SignUp/index.js"],"names":["_interopRequireDefault","Object","defineProperty","exports","value","default","_react","_default","createElement","Fragment","fill","d","opacity","Avatar","forwardRef","props","ref","alt","childrenProp","children","childrenClassNameProp","childrenClassName","classes","classNameProp","className","_props$component","component","Component","imgProps","sizes","src","srcSet","other","img","isValidElement","cloneElement","root","system","colorDefault","theme","position","display","alignItems","justifyContent","flexShrink","width","height","fontFamily","typography","fontSize","pxToRem","borderRadius","overflow","userSelect","color","palette","background","backgroundColor","type","grey","textAlign","objectFit","name","createSvgIcon","defaultCheckedIcon","CheckBox","defaultIcon","CheckBoxOutlineBlank","defaultIndeterminateIcon","IndeterminateCheckBox","_props$checkedIcon","checkedIcon","_props$color","_props$icon","icon","_props$indeterminate","indeterminate","_props$indeterminateI","indeterminateIcon","inputProps","SwitchBase","concat","checked","disabled","withStyles","text","secondary","colorPrimary","primary","main","action","hoverOpacity","colorSecondary","useStyles","makeStyles","paper","marginTop","spacing","flexDirection","avatar","margin","form","formControl","submit","signInLinkContainer","SignUp","history","useHistory","useEffect","Auth","getToken","replace","useState","firstName","setFirstName","lastName","setLastName","email","setEamil","password","setPassword","confirmPassword","setConfirmPassword","userType","setUserType","mobileNo","setMobileNo","policyStatus","setPolicyStatus","currentDateArr","Date","toLocaleDateString","split","reverse","join","dob","setDob","experience","setExperience","highestEducation","setHighestEducation","userLocation","setUserLocation","company","setComapy","setPosition","isSubmitButtonDisabled","setIsSubmitButtonDisabled","isFormValid","useCallback","every","e","Container","maxWidth","Box","Typography","variant","id","noValidate","onSubmit","preventDefault","filledFormData","mobile","address","console","log","axios","post","data","then","res","catch","Grid","container","item","xs","sm","TextField","autoComplete","onChange","target","required","fullWidth","label","autoFocus","FormControl","RadioGroup","aria-label","row","FormControlLabel","control","Radio","Button","justify","to"],"mappings":"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","file":"static/js/4.fd25a26c.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(_react.default.Fragment, null, _react.default.createElement(\"g\", {\n  fill: \"none\"\n}, _react.default.createElement(\"path\", {\n  d: \"M0 0h24v24H0V0z\"\n}), _react.default.createElement(\"path\", {\n  d: \"M0 0h24v24H0V0z\",\n  opacity: \".87\"\n})), _react.default.createElement(\"path\", {\n  d: \"M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zM9 6c0-1.66 1.34-3 3-3s3 1.34 3 3v2H9V6zm9 14H6V10h12v10zm-6-3c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2z\"\n})), 'LockOutlined');\n\nexports.default = _default;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      flexShrink: 0,\n      width: 40,\n      height: 40,\n      fontFamily: theme.typography.fontFamily,\n      fontSize: theme.typography.pxToRem(20),\n      borderRadius: '50%',\n      overflow: 'hidden',\n      userSelect: 'none'\n    },\n\n    /* Styles applied to the root element if there are children and not `src` or `srcSet`. */\n    colorDefault: {\n      color: theme.palette.background.default,\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[600]\n    },\n\n    /* Styles applied to the img element if either `src` or `srcSet` is defined. */\n    img: {\n      width: '100%',\n      height: '100%',\n      textAlign: 'center',\n      // Handle non-square image. The property isn't supported by IE 11.\n      objectFit: 'cover'\n    }\n  };\n};\nvar Avatar = React.forwardRef(function Avatar(props, ref) {\n  var alt = props.alt,\n      childrenProp = props.children,\n      childrenClassNameProp = props.childrenClassName,\n      classes = props.classes,\n      classNameProp = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      imgProps = props.imgProps,\n      sizes = props.sizes,\n      src = props.src,\n      srcSet = props.srcSet,\n      other = _objectWithoutProperties(props, [\"alt\", \"children\", \"childrenClassName\", \"classes\", \"className\", \"component\", \"imgProps\", \"sizes\", \"src\", \"srcSet\"]);\n\n  var children = null;\n  var img = src || srcSet;\n\n  if (img) {\n    children = React.createElement(\"img\", _extends({\n      alt: alt,\n      src: src,\n      srcSet: srcSet,\n      sizes: sizes,\n      className: classes.img\n    }, imgProps));\n  } else if (childrenClassNameProp && React.isValidElement(childrenProp)) {\n    children = React.cloneElement(childrenProp, {\n      className: clsx(childrenClassNameProp, childrenProp.props.className)\n    });\n  } else {\n    children = childrenProp;\n  }\n\n  return React.createElement(Component, _extends({\n    className: clsx(classes.root, classes.system, classNameProp, !img && classes.colorDefault),\n    ref: ref\n  }, other), children);\n});\nprocess.env.NODE_ENV !== \"production\" ? Avatar.propTypes = {\n  /**\n   * Used in combination with `src` or `srcSet` to\n   * provide an alt attribute for the rendered `img` element.\n   */\n  alt: PropTypes.string,\n\n  /**\n   * Used to render icon or text elements inside the Avatar.\n   * `src` and `alt` props will not be used and no `img` will\n   * be rendered by default.\n   *\n   * This can be an element, or just a string.\n   */\n  children: PropTypes.node,\n\n  /**\n   * @ignore\n   * The className of the child element.\n   * Used by Chip and ListItemIcon to style the Avatar icon.\n   */\n  childrenClassName: PropTypes.string,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Attributes applied to the `img` element if the component\n   * is used to display an image.\n   */\n  imgProps: PropTypes.object,\n\n  /**\n   * The `sizes` attribute for the `img` element.\n   */\n  sizes: PropTypes.string,\n\n  /**\n   * The `src` attribute for the `img` element.\n   */\n  src: PropTypes.string,\n\n  /**\n   * The `srcSet` attribute for the `img` element.\n   */\n  srcSet: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAvatar'\n})(Avatar);","import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport { fade } from '../styles/colorManipulator';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport { capitalize } from '../utils/helpers';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `indeterminate={true}`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = React.createElement(CheckBoxIcon, null);\nvar defaultIcon = React.createElement(CheckBoxOutlineBlankIcon, null);\nvar defaultIndeterminateIcon = React.createElement(IndeterminateCheckBoxIcon, null);\nvar Checkbox = React.forwardRef(function Checkbox(props, ref) {\n  var _props$checkedIcon = props.checkedIcon,\n      checkedIcon = _props$checkedIcon === void 0 ? defaultCheckedIcon : _props$checkedIcon,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$icon = props.icon,\n      icon = _props$icon === void 0 ? defaultIcon : _props$icon,\n      _props$indeterminate = props.indeterminate,\n      indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n      _props$indeterminateI = props.indeterminateIcon,\n      indeterminateIcon = _props$indeterminateI === void 0 ? defaultIndeterminateIcon : _props$indeterminateI,\n      inputProps = props.inputProps,\n      other = _objectWithoutProperties(props, [\"checkedIcon\", \"classes\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\"]);\n\n  return React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    checkedIcon: indeterminate ? indeterminateIcon : checkedIcon,\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))], indeterminate && classes.indeterminate),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    color: color,\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: indeterminate ? indeterminateIcon : icon,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes = {\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary', 'default']),\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the input.\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string,\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCheckbox'\n})(Checkbox);","import React, { useState, useEffect, useCallback } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControl from '@material-ui/core/FormControl';\nimport { Link as RouterLink, useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport Auth from '../../utils/Auth';\n\n\n\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  formControl: {\n    width: '100%',\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  signInLinkContainer: {\n    display: 'flex',\n    justifyContent: 'center',\n  },\n}));\n\nexport default function SignUp() {\n\n  // styles\n  const classes = useStyles();\n  const history = useHistory();\n\n  useEffect(() => {\n    const token = Auth.getToken();\n    if (token) {\n      history.replace('/');\n    }\n  });\n\n  // common fields\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [email, setEamil] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [userType, setUserType] = useState('candidate');\n  const [mobileNo, setMobileNo] = useState('');\n  const [policyStatus, setPolicyStatus] = useState(true);\n\n  // if candidate\n  const currentDateArr = (new Date().toLocaleDateString()).split('/');\n  const [dob, setDob] = useState(currentDateArr.reverse().join('-'));\n  const [experience, setExperience] = useState('0');\n  const [highestEducation, setHighestEducation] = useState('');\n  const [userLocation, setUserLocation] = useState('');\n\n  // if recruiter\n  const [company, setComapy] = useState('');\n  const [position, setPosition] = useState('');\n\n  const [isSubmitButtonDisabled, setIsSubmitButtonDisabled] = useState(true);\n\n  const isFormValid = useCallback(() => {\n    if (userType) {\n      if ([firstName, lastName, email, password, confirmPassword, mobileNo, userLocation, policyStatus].every(e => e)\n        && (password === confirmPassword)) {\n        if (userType === 'candidate') {\n          if (dob && highestEducation && experience) {\n            return true;\n          } else {\n            return false;\n          }\n        } else {\n          if (company && position) {\n            return true;\n          } else {\n            return false;\n          }\n        }\n      } else {\n        return false;\n      }\n    } else {\n      return false;\n    }\n  }, [\n    firstName,\n    lastName,\n    email,\n    password,\n    confirmPassword,\n    userType,\n    userLocation,\n    mobileNo,\n    policyStatus,\n    dob,\n    highestEducation,\n    experience,\n    company,\n    position,\n  ]);\n\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    if (isFormValid()) {\n      // handle form submit here\n      const filledFormData = {\n        firstName,\n        lastName,\n        email,\n        password,\n        userType,\n        mobile: mobileNo,\n        address: userLocation\n      }\n\n      if (userType === 'candidate') {\n        filledFormData.dob = dob;\n        filledFormData.highestEducation = highestEducation;\n        filledFormData.experience = experience;\n      } else {\n        filledFormData.company = company;\n        filledFormData.position = position;\n      }\n\n      console.log('Form data ', filledFormData);\n      axios.post('/account/new', {\n        data: filledFormData\n      })\n        .then((res) => {\n          console.log(res);\n        })\n        .catch((e) => {\n          console.log('Something went wrong ', e);\n        })\n\n    }\n  }\n\n  useEffect(() => {\n    if (isFormValid()) {\n      setIsSubmitButtonDisabled(false);\n    } else {\n      setIsSubmitButtonDisabled(true);\n    }\n  }, [isFormValid]);\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <Box className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        <form\n          id=\"signupForm\"\n          className={classes.form}\n          noValidate\n          onSubmit={handleSubmit}\n        >\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                autoComplete=\"fname\"\n                name=\"firstName\"\n                value={firstName}\n                onChange={(e) => setFirstName(e.target.value)}\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"firstName\"\n                label=\"First Name\"\n                autoFocus\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"lastName\"\n                value={lastName}\n                onChange={(e) => setLastName(e.target.value)}\n                label=\"Last Name\"\n                name=\"lastName\"\n                autoComplete=\"lname\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                type=\"email\"\n                value={email}\n                onChange={(e) => setEamil(e.target.value)}\n                autoComplete=\"email\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                autoComplete=\"current-password\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Confirm Password\"\n                type=\"password\"\n                id=\"confirmPassword\"\n                value={confirmPassword}\n                onChange={(e) => setConfirmPassword(e.target.value)}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"mobile\"\n                label=\"Mobile no\"\n                type=\"tel\"\n                id=\"mobileNo\"\n                value={mobileNo}\n                onChange={(e) => setMobileNo(e.target.value)}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"userLocation\"\n                label=\"Location\"\n                type=\"text\"\n                id=\"userLocation\"\n                value={userLocation}\n                onChange={(e) => setUserLocation(e.target.value)}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormControl component=\"fieldset\" className={classes.formControl}>\n                <RadioGroup\n                  aria-label=\"user type\"\n                  name=\"userType\"\n                  value={userType}\n                  onChange={(e) => setUserType(e.target.value)}\n                  row\n                >\n                  <FormControlLabel value=\"candidate\" control={<Radio />} label=\"Candidate\" />\n                  <FormControlLabel value=\"recruiter\" control={<Radio />} label=\"Recruiter\" />\n                </RadioGroup>\n              </FormControl>\n            </Grid>\n\n            {(userType === 'candidate') ? (\n              <>\n                <Grid item xs={12}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    name=\"dob\"\n                    label=\"Date of birth\"\n                    type=\"date\"\n                    id=\"dob\"\n                    value={dob}\n                    onChange={(e) => setDob(e.target.value)}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    name=\"highestEducation\"\n                    label=\"Highest education\"\n                    type=\"text\"\n                    id=\"highestEducation\"\n                    value={highestEducation}\n                    onChange={(e) => setHighestEducation(e.target.value)}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    name=\"experience\"\n                    label=\"Experience\"\n                    type=\"number\"\n                    id=\"experience\"\n                    value={experience}\n                    onChange={(e) => setExperience(e.target.value)}\n                  />\n                </Grid>\n              </>\n            ) : (\n                <>\n                  <Grid item xs={12}>\n                    <TextField\n                      variant=\"outlined\"\n                      required\n                      fullWidth\n                      name=\"company\"\n                      label=\"Company\"\n                      type=\"text\"\n                      id=\"company\"\n                      value={company}\n                      onChange={(e) => setComapy(e.target.value)}\n                    />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <TextField\n                      variant=\"outlined\"\n                      required\n                      fullWidth\n                      name=\"position\"\n                      label=\"Position in company\"\n                      type=\"text\"\n                      id=\"position\"\n                      value={position}\n                      onChange={(e) => setPosition(e.target.value)}\n                    />\n                  </Grid>\n                </>\n              )}\n            <Grid item xs={12}>\n              <FormControlLabel\n                control={<Checkbox checked={policyStatus} value={policyStatus} color=\"primary\" />}\n                label=\"I have read and accept all terms and policies.\"\n                onChange={(e) => {\n                  // console.log(e.target.value);\n                  setPolicyStatus(!policyStatus)\n                }}\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            disabled={isSubmitButtonDisabled}\n          >\n            Sign Up\n          </Button>\n          <Grid container justify=\"flex-end\">\n            <Grid item className={classes.signInLinkContainer}>\n              <RouterLink to=\"/signin\">\n                Already have an account? Sign in\n              </RouterLink>\n            </Grid>\n          </Grid>\n        </form>\n      </Box>\n    </Container>\n  );\n}","import SignUp from './SignUp';\n\nexport default SignUp;"],"sourceRoot":""}